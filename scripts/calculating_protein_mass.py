protein_masses = {}  # {amino: mass}


# save masses in dictionary
def save_mass_data(massfile):
    with open(massfile) as file:
        for line in file:
            line = line.strip()
            splitted = line.split("   ")  # 3 spaces instead of tab is used
            protein_masses[splitted[0]] = splitted[1]


def calculate_mass_of(protein):
    save_mass_data("mass.txt")
    mass = 0
    for amino in protein:
        if protein_masses.keys().__contains__(amino):  # if valid amino
            mass += float(protein_masses[amino])
        else:
            print(f"Amino {amino} not found in mass table")
    return round(mass, 3)


mass_file = "../resources/mass.txt"
print(calculate_mass_of("AFYTFCCFDMNMHKMVKRTLSCDTHACGTHKSWYDCRVRIIFWRAETQQHSWYQKGTLPRFWMCHIEGITDFSQYLILECQSLDTEICWKMLDEVGTWFQRSVMTERFLKDANKCGIEDKSFCIVPRIAQMCQSVQEGQWMCFMWADFNSNGTHPGHQNDITRLSEAEQVNNSNIHFSRHQEKHVNALWPHWFEPQFLEGVYNTVRYDVVLVWTCACHEERHCGFQIGCFSRQYDWLPRIHFVITTIAGDRLPNSPSVWHGSSHREDTIWRENPMSMTQANWDEGSPNVAMKNFMTPQIFQKDHCPNIFCWTIDPPYRLWGCTECKFPPCQEGKKVVRDCQYSDVAGRKVRDWQTYKMGTWYWCAFRSCYHNTGMFWLYDAVYEYPAQFGHAQHRRFFHYYVTTAPKNCSGSVGMDFKRRYNMYVKLRAHKWWVLCRWNFKLNSRSKQPWTVIYPLYAFYIKFFCLEGIMWENNTNFECLYAEMTGIVFTLFIQSKNDRMRMPTCFANTHYELFLRALADDGWSSAAPWWTFNCSTVGHVGTFECQPRLWLVPCHHSWRCPYTPRWAPMECPSQKEPFNIKTCKVHECCVVYNKTEAAWKWTECIKEIGELEMNYHHHHQQPELTCADREWEHWVMRSICWNMIQAKYEDNEGCHANCGATKANSMNCGCPRRLQTKKGRWYEIQPTDVCEEWAYMQIKVNWIWLSPGASRWAELNMFLVIKICNYVRANLAHEFLGYHTGSHVWLVHMRRTVEQYSTEETVHAMDSWIEMDRVWGTHCWFKLCKCKQFHPKSYIKTYAFRVSVNDLRSAYSNSIPTPLLTCFMSTYVIEHKPYCMVAFIFYALPKWAVRLSYKHQKGLMSMANRVSADCKFDVKWQKHGLMGRDKHTTQKGARFDKNSDYGKPRIPLCD"))
